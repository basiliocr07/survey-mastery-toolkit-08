
@model List<SurveyApp.Web.Models.SurveyResponseViewModel>
@{
    ViewData["Title"] = "Survey Responses";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex items-center justify-between mb-6">
        <div>
            <h1 class="text-2xl font-bold">Survey Responses</h1>
            <p class="text-gray-600">Showing @Model.Count responses for "@ViewBag.SurveyTitle"</p>
        </div>
        <a href="@Url.Action("Index", "Surveys")" class="px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300">
            Back to Surveys
        </a>
    </div>

    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        @if (Model.Count == 0)
        {
            <div class="p-8 text-center">
                <p class="text-gray-500 mb-4">No responses have been received yet</p>
                <a href="@Url.Action("Take", new { id = ViewBag.SurveyId })" class="inline-block px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
                    Take Survey
                </a>
            </div>
        }
        else
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Respondent
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Company
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Date
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Validation
                            </th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var response in Model)
                        {
                            var validAnswers = response.Answers.Count(a => a.IsValid);
                            var totalAnswers = response.Answers.Count;
                            var validationClass = validAnswers == totalAnswers ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800";
                            
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4">
                                    <div class="font-medium text-gray-900">@response.RespondentName</div>
                                    <div class="text-gray-500 text-sm">@response.RespondentEmail</div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-gray-900">@(string.IsNullOrEmpty(response.RespondentCompany) ? "Not specified" : response.RespondentCompany)</div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-gray-900">@response.SubmittedAt.ToString("dd MMM yyyy")</div>
                                    <div class="text-gray-500 text-sm">@response.SubmittedAt.ToString("HH:mm")</div>
                                </td>
                                <td class="px-6 py-4">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @validationClass">
                                        @validAnswers/@totalAnswers Valid
                                    </span>
                                </td>
                                <td class="px-6 py-4 text-right">
                                    <button class="text-indigo-600 hover:text-indigo-900 font-medium"
                                            data-response-id="@response.Id"
                                            onclick="toggleResponseDetails(@response.Id)">
                                        View Details
                                    </button>
                                </td>
                            </tr>
                            <tr id="response-details-@response.Id" class="hidden bg-gray-50">
                                <td colspan="5" class="px-6 py-4">
                                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                                        <div class="flex items-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                            </svg>
                                            <span class="text-sm">@response.RespondentEmail</span>
                                        </div>
                                        <div class="flex items-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                                            </svg>
                                            <span class="text-sm">@(string.IsNullOrEmpty(response.RespondentPhone) ? "Not provided" : response.RespondentPhone)</span>
                                        </div>
                                        <div class="flex items-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                                            </svg>
                                            <span class="text-sm">@(string.IsNullOrEmpty(response.RespondentCompany) ? "Not provided" : response.RespondentCompany)</span>
                                        </div>
                                    </div>
                                    
                                    <h4 class="text-sm font-medium mb-2">Responses</h4>
                                    <div class="border rounded-md">
                                        <div class="divide-y">
                                            @foreach (var answer in response.Answers)
                                            {
                                                <div class="p-3 flex justify-between items-start">
                                                    <div>
                                                        <div class="font-medium text-sm">@answer.QuestionTitle</div>
                                                        <div class="text-sm mt-1">@answer.Value</div>
                                                    </div>
                                                    <div>
                                                        @if (answer.IsValid)
                                                        {
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                            </svg>
                                                        }
                                                        else
                                                        {
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                            </svg>
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function toggleResponseDetails(responseId) {
            const detailsRow = document.getElementById(`response-details-${responseId}`);
            if (detailsRow) {
                if (detailsRow.classList.contains('hidden')) {
                    detailsRow.classList.remove('hidden');
                } else {
                    detailsRow.classList.add('hidden');
                }
            }
        }
    </script>
}
